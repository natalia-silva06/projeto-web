HTML

<!DOCTYPE html>
<html>
<head>
  <title>Sistema Bancário</title>
  <script src="script.js"></script>
</head>
<body>
  <h1>Cadastro de Pessoa e Usuário</h1>
  <form id="cadastroForm">
    <label for="nome">Nome:</label>
    <input type="text" id="nome" required><br>

    <label for="cpf">CPF:</label>
    <input type="text" id="cpf" required><br>

    <label for="email">Email:</label>
    <input type="email" id="email" required><br>

    <label for="senha">Senha:</label>
    <input type="password" id="senha" required><br>

    <input type="submit" value="Cadastrar">
  </form>

  <h1>Login</h1>
  <form id="loginForm">
    <label for="loginEmail">Email:</label>
    <input type="email" id="loginEmail" required><br>

    <label for="loginSenha">Senha:</label>
    <input type="password" id="loginSenha" required><br>

    <input type="submit" value="Entrar">
  </form>




  JAVA SCRIPT(SCRIPT.JS)

  // Simulação de backend em JavaScript
const pessoas = [];
const contasCorrentes = [];
const movimentos = [];

// Função para cadastrar uma pessoa
function cadastrarPessoa(nome, cpf, email) {
  const pessoa = { nome, cpf, email };
  pessoas.push(pessoa);
  return pessoa;
}

// Função para cadastrar uma conta corrente
function cadastrarContaCorrente(usuario, numeroConta) {
  const contaCorrente = { usuario, numeroConta, saldo: 0 };
  contasCorrentes.push(contaCorrente);
  return contaCorrente;
}

// Função para realizar uma transferência
function realizarTransferencia(contaOrigem, contaDestino, valor) {
  if (contaOrigem.saldo < valor) {
    return "Saldo insuficiente.";
  }

  contaOrigem.saldo -= valor;
  contaDestino.saldo += valor;

  const movimentoCredito = { tipo: "C", contaCorrente: contaDestino, valor, observacao: "TRANSFERENCIA" };
  const movimentoDebito = { tipo: "D", contaCorrente: contaOrigem, valor, observacao: "TRANSFERENCIA" };

  movimentos.push(movimentoCredito, movimentoDebito);

  return "Transferência realizada com sucesso.";
}

// Função para buscar uma pessoa por CPF
function buscarPessoaPorCPF(cpf) {
  return pessoas.find(pessoa => pessoa.cpf === cpf);
}

// Função para buscar uma conta corrente por número de conta
function buscarContaCorrentePorNumero(numeroConta) {
  return contasCorrentes.find(conta => conta.numeroConta === numeroConta);
}

// Evento de cadastro de pessoa
document.getElementById("cadastroForm").addEventListener("submit", function(event) {
  event.preventDefault();

  const nome = document.getElementById("nome").value;
  const cpf = document.getElementById("cpf").value;
  const email = document.getElementById("email").value;
  const senha = document.getElementById("senha").value;

  const pessoaExistente = buscarPessoaPorCPF(cpf);
  if (pessoaExistente) {
    alert("CPF já cadastrado.");
    return;
  }

  const pessoa = cadastrarPessoa(nome, cpf, email);
  cadastrarContaCorrente(pessoa, "1234"); // Exemplo de cadastro automático de conta corrente

  alert("Cadastro realizado com sucesso.");
  this.reset();
});

// Evento de login
document.getElementById("loginForm").addEventListener("submit", function(event) {
  event.preventDefault();

  const email = document.getElementById("loginEmail").value;
  const senha = document.getElementById("loginSenha").value;

  // Lógica de validação do login
  // ...

  alert("Login realizado com sucesso.");
  this.reset();

  // Redirecionar para a tela de seleção de conta corrente
  // ...
});



  

  <!-- Demais telas e formulários aqui -->
</body>
</html>
